import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('https://qa.abatoolbox.com/');
  await page.goto('https://qa.abatoolbox.com/login');
  await page.getByLabel('Company (Registered Acronym)').click();
  await page.getByLabel('Company (Registered Acronym)').fill('tac');
  await page.getByLabel('Username (Registered Email').click();
  await page.getByLabel('Username (Registered Email').fill('dorothy@tac.com');
  await page.getByLabel('Username (Registered Email').press('Tab');
  await page.getByLabel('Password').fill('Password1!');
  await page.getByRole('button', { name: 'Sign in' }).click();
  await page.getByRole('tab', { name: 'Learner Center' }).click();
  await page.getByRole('cell', { name: 'Cannoli Il.' }).click();
  await page.locator('#b065ae65-18bb-4b8a-a9fe-3f9f5a7b9424 > .q-list > .q-item > div:nth-child(2) > div:nth-child(2) > button').first().click();
  await page.getByRole('button', { name: 'Graph', exact: true }).click();
  await page.locator('.grid > .q-field > .q-field__inner > .q-field__control > .q-field__append').click();
  await page.getByRole('option', { name: 'Per Opportunity Measure (POM' }).locator('div').nth(1).click();
  await page.getByText('Per Opportunity Measure (POM)Data Format *').click();
  await page.getByText('Per Opportunity Measure (POM)Data Format *').click();
  await page.getByRole('button', { name: 'Add' }).click();
  await page.getByRole('button', { name: 'Set Baseline' }).click();
  await page.locator('div').filter({ hasText: /^Modality Measurement \*$/ }).first().click();
  await page.getByRole('option', { name: 'Percentage' }).locator('div').nth(1).click();
  await page.getByLabel('Criterion Score *').click();
  await page.getByLabel('Criterion Score *').fill('78');
  await page.getByLabel('For Consecutive Sessions *').click();
  await page.getByLabel('For Consecutive Sessions *').fill('4');
  await page.getByRole('button', { name: 'Create' }).click();
  await page.getByRole('button', { name: 'Graph Baseline' }).click();
  await page.locator('.column > div > .q-field > .q-field__inner > .q-field__control > .q-field__append').click();
  await page.getByRole('option', { name: 'Aug 29, 2024 | 1:52 PM - 2:22' }).locator('div').nth(1).click();
  await page.getByLabel('Correct %').click();
  await page.getByLabel('Correct %').fill('70');
  await page.getByLabel('Learn Units').click();
  await page.getByLabel('Learn Units').fill('1');
  await page.locator('div').filter({ hasText: /^Tactic\/Note$/ }).nth(3).click();
  await page.getByLabel('Tactic/Note').fill('Automation Note');
  await page.getByRole('button', { name: 'Save' }).click();
  await expect(page.getByLabel('[object Object], 70. Baseline.')).toBeVisible();
  await expect(page.locator('#highcharts-i1mecu3-0')).toContainText('Aug 292024');
  await expect(page.getByLabel('Baseline. Highcharts').getByText('DA', { exact: true })).toBeVisible();
  await expect(page.locator('li')).toContainText('DAAutomation Note');
  await expect(page.getByText('Notes: DAAutomation Note')).toBeVisible();

  //Not needed to start DC, GS
  await page.getByRole('button', { name: 'Start Phase' }).click();
  await page.getByRole('button', { name: 'Short Term Objective' }).click();
  await page.getByLabel('Phase Name *').click();
  await page.getByLabel('Phase Name *').fill('Phase 1');
  await page.locator('.input-group > .q-field > .q-field__inner > .q-field__control > .q-field__append').click();
  await page.getByRole('option', { name: 'Constructs the second Lego set' }).locator('div').nth(1).click();
  await page.getByRole('button', { name: 'Create' }).click();
  await page.locator('.column > div > .q-field > .q-field__inner > .q-field__control > .q-field__append').click();
  await page.getByRole('option', { name: 'Phase' }).click();
  await page.locator('#q-portal--dialog--11').getByRole('button', { name: 'Start Phase' }).click();
  await page.goto('https://tac.qa.abatoolbox.com/learner-center/9cd223b7-48b4-4f39-88d0-9e3e7919ebb2/teach-and-treat');
});